@using Entities
@using Business

@inject NavigationManager NavManager;

<EditForm Model="oProyecto">
    <div class="form-group">
        <label>ID</label>
        <input class="form-control" id="disabledInput" type="text" placeholder="@oProyecto.ProyectoId" disabled>
    </div>
    <div class="form-group">
        <label>Nombre del Proyecto</label>
        <InputText class="form-control" @bind-Value="oProyecto.NombreProyecto"></InputText>
    </div>
    <div class="form-group">
        <label>Municipio</label>
        <InputText class="form-control" @bind-Value="oProyecto.Municipio"></InputText>
    </div>
    <div class="form-group">
        <label>Cliente</label>
        <InputSelect class="form-control" @bind-Value="oProyecto.ClienteId">
            @foreach (var cliente in clientes)
            {
                <option value="@cliente.ClienteId">@cliente.NombreCliente</option>
            }
        </InputSelect>
    </div>
    <div class="form-check form-switch">
        <input class="form-check-input" type="checkbox" id="flexSwitchCheckChecked" checked @bind-value="oProyecto.Estatus">
        <label class="form-check-label" for="flexSwitchCheckChecked">Activar Empleado</label>
    </div>
    <br />
    <input class="btn btn-primary" type="button" value="Actualizar" @onclick="ActualizarProyecto" />
</EditForm>

@code {
    [Parameter]
    public int ProyectoId { get; set; }

    EntidadProyecto oProyecto = new EntidadProyecto();

    List<EntidadProyecto> proyectos = new List<EntidadProyecto>();
    List<EntidadCliente> clientes = new List<EntidadCliente>();

    protected override async Task OnInitializedAsync()
    {
        proyectos = B_Proyecto.ListaProyecto();
        clientes = B_Cliente.ListaCliente();
        oProyecto = B_Proyecto.ProyectoPorId(ProyectoId);
    }

    private void ActualizarProyecto()
    {
        B_Proyecto.ActualizarProyecto(oProyecto);
        NavManager.NavigateTo("proyecto/lista");
    }
}
